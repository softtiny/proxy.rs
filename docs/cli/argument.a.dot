digraph {

    graph [
        label="proxy_rs",
        labelloc=t,

        pad=0.4,

        // Consider rendering the graph using a different layout algorithm, such as:
        // [dot, neato, twopi, circo, fdp, sfdp]
        layout=neato,
        overlap=false,
        splines="line",
        rankdir=LR,

        fontname="Helvetica", 
        fontsize="36",
    ];

    node [
        fontname="monospace",
        fontsize="10",
        shape="record",
        style="filled",
    ];

    edge [
        fontname="monospace",
        fontsize="10",
    ];

    "proxy_rs" [label="crate|proxy_rs", fillcolor="#5397c8"]; // "crate" node
    "proxy_rs::argument" [label="pub(crate) mod|argument", fillcolor="#f8c04c"]; // "mod" node
    "proxy_rs::argument::Cli" [label="pub struct|argument::Cli", fillcolor="#81c169"]; // "struct" node
    "proxy_rs::argument::Commands" [label="pub enum|argument::Commands", fillcolor="#81c169"]; // "enum" node
    "proxy_rs::argument::FindArgs" [label="pub struct|argument::FindArgs", fillcolor="#81c169"]; // "struct" node
    "proxy_rs::argument::GrabArgs" [label="pub struct|argument::GrabArgs", fillcolor="#81c169"]; // "struct" node
    "proxy_rs::argument::ServeArgs" [label="pub struct|argument::ServeArgs", fillcolor="#81c169"]; // "struct" node
    "proxy_rs::handle_grab_command" [label="pub(crate) async fn|handle_grab_command", fillcolor="#f8c04c"]; // "async fn" node
    "proxy_rs::main" [label="pub(crate) fn|main", fillcolor="#f8c04c"]; // "fn" node

    "proxy_rs" -> "proxy_rs::argument" [label="owns", color="#000000", style="solid"] [constraint=true]; // "owns" edge
    "proxy_rs" -> "proxy_rs::handle_grab_command" [label="owns", color="#000000", style="solid"] [constraint=true]; // "owns" edge
    "proxy_rs" -> "proxy_rs::main" [label="owns", color="#000000", style="solid"] [constraint=true]; // "owns" edge
    "proxy_rs::argument" -> "proxy_rs::argument::Cli" [label="owns", color="#000000", style="solid"] [constraint=true]; // "owns" edge
    "proxy_rs::argument" -> "proxy_rs::argument::Commands" [label="owns", color="#000000", style="solid"] [constraint=true]; // "owns" edge
    "proxy_rs::argument" -> "proxy_rs::argument::FindArgs" [label="owns", color="#000000", style="solid"] [constraint=true]; // "owns" edge
    "proxy_rs::argument" -> "proxy_rs::argument::GrabArgs" [label="owns", color="#000000", style="solid"] [constraint=true]; // "owns" edge
    "proxy_rs::argument" -> "proxy_rs::argument::ServeArgs" [label="owns", color="#000000", style="solid"] [constraint=true]; // "owns" edge

}
