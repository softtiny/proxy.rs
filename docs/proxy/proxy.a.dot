digraph {
    graph [ 
        rankdir=LR,
    ]
    "proxy" [label="struct Proxy"]
    "proxy" -> "host"
    "proxy" -> "port"
    "proxy" -> "expected_types" -> "Vec<String>"
    "proxy" -> "geo" -> "GeoData"
    "proxy" -> "types" -> "Vec<(String, Option<String>)>"
    "proxy" -> "schemes"
    "proxy" -> "logs" -> "Vec<(String, String, Duration)>"
    "proxy" -> "negotiator_proto"
    "proxy" -> "verify_ssl"
    "proxy" -> "timeout"
    "proxy" -> "runtimes"
    "proxy" -> "tcp_stream"
    "proxy" -> "tls_stream"
    "proxy" -> "request_stat"
    "proxy" -> "error_stat"
    "proxy" -> "is_working"
    "proxy" -> "create(host,port,expected_types)" -> "Option<Proxy>"
    "proxy" -> "error_rate()->f64"
    "proxy" -> "avg_resp_time()->f64"
    "proxy" -> "priority()->(f64,f64)"
    "proxy" -> "get_schemes(self)"
    "proxy" -> "as_text(&self)"
    "proxy" -> "as_json(&self)"
    "proxy" -> "log(self,msg,stime,error)"
    "proxy" -> "connect(self)->bool"
    "proxy" -> "send(self,[u8])->bool"
    "proxy" -> "recv(self,size)->Option<Vec<u8>>"
    "proxy" -> "recv_all(self)->Option<Vec<u8>>"
    "proxy" -> "close(self)"
    "proxy" -> "poll_read(self,cx,buf)->Poll<Result<()>>"
    "proxy" -> "poll_write(self,cx,buf)->Poll<Result<usize>>"
    "proxy" -> "poll_flush(self,cx,buf)"
    "proxy" -> "poll_shutdown(self,cx)"
    "proxy" -> "connect_tcp()"
    "proxy" -> "close_tcp()"
    "proxy" -> "connect_ssl(self,connect_payload)"
    "proxy" -> "close_tls(self)"
}